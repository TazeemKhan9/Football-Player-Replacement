#!/usr/bin/env python
# coding: utf-8

# In[26]:


get_ipython().run_cell_magic('writefile', 'app.py', 'import streamlit as st\nimport pandas as pd\nimport plotly.express as px\nimport plotly.figure_factory as ff \nurl1=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Goalkeeper/prepocessed_gk_basic.xlsx?raw=true\'\nurl2=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Goalkeeper/preprocessed_gk_advance.xlsx?raw=true\'\nurl3=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Right%20Back/right_back_basic.xlsx?raw=true\'\nurl4=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Right%20Back/right_back_advance.xlsx?raw=true\'\nurl5=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Left%20Back/left_back_basic.xlsx?raw=true\'\nurl6=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Left%20Back/left_back_advance.xlsx?raw=true\'\nurl7=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Centre%20Back/cb_passing_search.xlsx?raw=true\'\nurl8=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Centre%20Back/cb_basic_cluster.xlsx?raw=true\'\nurl9=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/Input%20Data/Input%20Data.xlsx?raw=true\'\nurl10=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/CM/cm_basic.xlsx?raw=true\'\nurl11=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/CM/cm_advance.xlsx?raw=true\'\nurl12=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/CDM/cdm_basic_cluster.xlsx?raw=true\'\nurl13=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/CDM/cdm_advance_cluster.xlsx?raw=true\'\nurl14=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/AM/am_basic.xlsx?raw=true\'\nurl15=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/AM/am_advance.xlsx?raw=true\'\nurl16=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/LW/lw_basic.xlsx?raw=true\'\nurl17=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/LW/lw_advance.xlsx?raw=true\'\nurl18=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/RW/rw_basic.xlsx?raw=true\'\nurl19=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/RW/rw_advance.xlsx?raw=true\'\nurl20=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/CF/cf_basic.xlsx?raw=true\'\nurl21=\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/CF/cf_advance.xlsx?raw=true\'\n\n\n\n\n\n\nPAGE_CONFIG = {"page_title":"StColab.io","page_icon":":smiley:","layout":"centered"}\nst.beta_set_page_config(**PAGE_CONFIG)\n\ndef load_data(url,nrows):\n    data = pd.read_excel(url, nrows=nrows)\n\t\t\n\n    lowercase = lambda x: str(x).lower()\n    data.rename(lowercase, axis=\'columns\', inplace=True)\n    #data[DATE_COLUMN] = pd.to_datetime(data[DATE_COLUMN])\n\n    return data\n\ndef Replacement_cb(cb_search,Player, Age, Value):\n\tBasic_Cluster_number=int(cb_search[cb_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= cb_search.query(\'basic_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= cb_search.query(\'basic_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= cb_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\n\n\ndef Replacement_cb_passing(cb_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(cb_passing_search[cb_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= cb_passing_search.query(\'advance_cluster == 0 or advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= cb_passing_search.query(\'advance_cluster == 1 or advance_cluster == 0  and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= cb_passing_search.query(\'advance_cluster == 0 or advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\n\n\n\ndef Replacement_rb(rb_search,Player, Age, Value):\n\tBasic_Cluster_number=int(rb_search[rb_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= rb_search.query(\'basic_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= rb_search.query(\'basic_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= rb_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\ndef Replacement_rb_passing(rb_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(rb_passing_search[rb_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= rb_passing_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= rb_passing_search.query(\'advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= rb_passing_search.query(\'advance_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_lb(lb_search,Player, Age,Value):\n\tBasic_Cluster_number=int(lb_search[lb_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= lb_search.query(\'basic_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= lb_search.query(\'basic_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= lb_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==3:\n\t\tsearch_df= lb_search.query(\'basic_cluster == 3 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\ndef Replacement_lb_passing(lb_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(lb_passing_search[lb_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= lb_passing_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= lb_passing_search.query(\'advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= lb_passing_search.query(\'advance_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_cdm(cdm_defending_search,Player, Age, Value):\n\tBasic_Cluster_number=int(cdm_defending_search[cdm_defending_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= cdm_defending_search.query(\'basic_cluster == 0 and age <= Age and value_num <= Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= cdm_defending_search.query(\'basic_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= cdm_defending_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_cdm_passing(cdm_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(cdm_passing_search[cdm_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= cdm_passing_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= cdm_passing_search.query(\'advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= cdm_passing_search.query(\'advance_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\ndef Replacement_cm_passing(cm_passing_search,Player, Age, Value):\n\tBasic_Cluster_number=int(cm_passing_search[cm_passing_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= cm_passing_search.query(\'basic_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= cm_passing_search.query(\'basic_cluster == 3 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= cm_passing_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==3:\n\t\tsearch_df= cm_passing_search.query(\'basic_cluster == 3 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_cm_attacking(cm_attacking_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(cm_attacking_search[cm_attacking_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= cm_attacking_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= cm_attacking_search.query(\'advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= cm_attacking_search.query(\'advance_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_am_attacking(am_attacking_search,Player, Age, Value):\n\tBasic_Cluster_number=int(am_attacking_search[am_attacking_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= am_attacking_search.query(\'basic_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= am_attacking_search.query(\'basic_cluster == 0 or basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= am_attacking_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_am_passing(am_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(am_passing_search[am_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= am_passing_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= am_passing_search.query(\'advance_cluster == 1 or advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_lw_attacking(lw_attacking_search,Player, Age, Value):\n\tBasic_Cluster_number=int(lw_attacking_search[lw_attacking_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= lw_attacking_search.query(\'basic_cluster == 0 or basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= lw_attacking_search.query(\'basic_cluster == 0 or basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= lw_attacking_search.query(\'basic_cluster == 0 or basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==3:\n\t\tsearch_df= lw_attacking_search.query(\'basic_cluster == 3 or basic_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_lw_passing(lw_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(lw_passing_search[lw_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= lw_passing_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= lw_passing_search.query(\'advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= lw_passing_search.query(\'advance_cluster == 1 or advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_rw_attacking(rw_attacking_search,Player, Age, Value):\n\tBasic_Cluster_number=int(rw_attacking_search[rw_attacking_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= rw_attacking_search.query(\'(basic_cluster == 0 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= rw_attacking_search.query(\'(basic_cluster == 0 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= rw_attacking_search.query(\'(basic_cluster == 0 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==3:\n\t\tsearch_df= rw_attacking_search.query(\'(basic_cluster == 1 or basic_cluster == 0) and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_rw_passing(rw_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(rw_passing_search[rw_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= rw_passing_search.query(\'(advance_cluster == 0 or advance_cluster == 1) and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= rw_passing_search.query(\'(advance_cluster == 1 or advance_cluster == 0) and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= rw_passing_search.query(\'(advance_cluster == 2 or advance_cluster == 0) and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\ndef Replacement_cf_attacking(cf_attacking_search,Player, Age,Value):\n\tBasic_Cluster_number=int(cf_attacking_search[cf_attacking_search[\'player\']==Player][\'basic_cluster\'])\n\tif Basic_Cluster_number==0:\n\t\tsearch_df= cf_attacking_search.query(\'(basic_cluster == 1 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==1:\n\t\tsearch_df= cf_attacking_search.query(\'(basic_cluster == 1 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==2:\n\t\tsearch_df= cf_attacking_search.query(\'basic_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\telif Basic_Cluster_number==3:\n\t\tsearch_df= cf_attacking_search.query(\'(basic_cluster == 0 or basic_cluster == 1) and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\ndef Replacement_cf_passing(cf_passing_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(cf_passing_search[cf_passing_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= cf_passing_search.query(\'(advance_cluster == 0 or advance_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= cf_passing_search.query(\'(advance_cluster == 0 or advance_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= cf_passing_search.query(\'(advance_cluster == 0 or advance_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\n\n\t\n\ndef gk_replacement_basic(gk_search,Player, Age, Value):\n\t\tcluster_number=int(gk_search[gk_search[\'player\']==Player][\'basic_cluster\'])\n\t\tif cluster_number==3:\n\t\t\tsearch_df= gk_search.query(\'(basic_cluster == 3 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\t\telif cluster_number==2:\n\t\t\tsearch_df= gk_search.query(\'(basic_cluster == 3 or basic_cluster == 2) and age <= @Age and value_num <= @Value\' )\n\t\telif cluster_number==0:\n\t\t\tsearch_df= gk_search.query(\'(basic_cluster == 3 or basic_cluster == 2) and age <= @Age and value_num <= @Value\')\n\t\telif cluster_number==1:\n\t\t\tsearch_df= gk_search.query(\'(basic_cluster == 3 or basic_cluster == 2 or basic_cluster == 1) and age < @Age and value_num <= @Value\' )\n\t \n\t\treturn search_df\n\ndef gk_replacement_advance(gk_advance_search,Player, Age, Value):\n\tAdvance_Cluster_number=int(gk_advance_search[gk_advance_search[\'player\']==Player][\'advance_cluster\'])\n\tif Advance_Cluster_number==0:\n\t\tsearch_df= gk_advance_search.query(\'advance_cluster == 0 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==1:\n\t\tsearch_df= gk_advance_search.query(\'advance_cluster == 1 and age <= @Age and value_num <= @Value\' )\n\telif Advance_Cluster_number==2:\n\t\tsearch_df= gk_advance_search.query(\'advance_cluster == 2 and age <= @Age and value_num <= @Value\' )\n\treturn search_df\n\n\n\n\ndef main():\n\tmenu = ["Home","About","Tool"]\n\tchoice = st.sidebar.selectbox(\'Menu\',menu)\n\tif choice == \'Home\':\n\t\tst.header("Football Player Replacement")\n\t\tst.write("Beautiful Project")\n\t\tpage_bg_img = \'\'\'\n\t\t<style>\n\t\tbody {\n\t\tbackground-image: url("https://cdn.discordapp.com/attachments/690454673601331211/765924833548304444/2020-10-14_06.39.55_1__01.jpg");\n\t\tbackground-size: cover;\n\t\tcolor:white;\n\t\ttext-align:center;\n\t\t\n\t\t}\n\t\th2 {\n\t\t\ttext-align:center;\n\t\t\tcolor:white;\n\t\t}\n\t\t</style>\n\t\t\'\'\'\n\t\tst.markdown(page_bg_img, unsafe_allow_html=True)\n\t\t\t\n\telif choice== \'About\':\n\t\tdata=load_data(url9,3000)\n\t\tst.header(\'About the project\')\n\t\tst.subheader(\'Data\')\n\t\tst.write(\'We have collected multiple datasets from fbref.com which covers various facets like goalkeeping actions, defensive actions etc. Only the top 5 European leagues data have been taken for the year 2019-2020. The problem with the original Fbref datasets was that they had generalized positions into GK, DF, MF and FW. To get a deeper analysis we needed more granular data about the positions of data and that is where we used TransferMarkt.com. We scraped the exact positions and the values of all the players from there and added them into our dataset. The pre-processing included standardizing the data into per 90 mins format, and dropping other variables like wins, losses etc. (Feature Selection) which are overall team performance and do not signify the performance of an individual player. Another important criteria we have used is that we are only considering players who have played 10 matches or more. This is done so that we avoid inconsistent data which is possible for players who have played less matches.\')\n\t\tog_pos=st.selectbox(\'Select a dataset\',[\'GK Saving\',\'GK Passing\',\'Defending\',\'Passing\',\'Shooting\',\'None\'])\n\t\tif og_pos==\'GK Saving\':\n\t\t\tst.dataframe(data=pd.read_excel(\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Original%20Data/BASIC%20GOALKEEPING%20STATS.xls.xlsx?raw=true\'),width=3000,height=500)\n\t\telif og_pos==\'GK Passing\':\n\t\t\tst.dataframe(data=pd.read_excel(\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Original%20Data/Advance%20Goalkeeping.xlsx?raw=true\'),width=3000,height=500)\n\t\telif og_pos==\'Defending\':\n\t\t\tst.dataframe(data=pd.read_excel(\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Original%20Data/Defending%20Data.xlsx?raw=true\'),width=3000,height=500)\n\t\telif og_pos==\'Passing\':\n\t\t\tst.dataframe(data=pd.read_excel(\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Original%20Data/Basic%20Passing.xlsx?raw=true\'),width=3000,height=500)\n\t\telif og_pos==\'Shooting\':\n\t\t\tst.dataframe(data=pd.read_excel(\'https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Original%20Data/Shooting%20Data.xlsx?raw=true\'),width=3000,height=500)\n\t\t \n\t     \n\t\tst.subheader(\'PCA\')\n\t\tst.write(\'Principal Component Analysis ( PCA )is a dimension reductionality algorithm. Principal component analysis is a technique for feature extraction — so it combines our input variables in a specific linear way, then we can drop the least important variables while still retaining the most valuable parts of all of the variables. Even though there are not a lot of variables in our dataset we have used PCA because the new variables it creates are all independent of each other. In football most of the factors are dependent on each other. For example, if a player shoot more, higher is the chance he/she can score a goal. So, we used PCA so that we could retain valuable information while making the variables independent of each other. Another added benefit of PCA was that we were able to visualise the clusters using the first 2 significant principal components in a scatter plot.\')\n\t\t\n\t\tst.subheader(\'K-Means Clustering\')\n\t\tst.write(\'Clustering is one of the unsupervised learning techniques. We can cluster observations into the same subgroups so that observations within a subgroup are quite similar to each other and observations in different subgroups are quite different from each other. In K-Means clustering, the step that we follow are:\')\n\t\tst.write(\'1) Specify K-clusters where K is the number of clusters and initialize random centroids\')\n\t\tst.write(\'2) Iterate until the cluster assignments stop changing. The method assigns each observation to exactly one of the K clusters\')\n\t\tst.write(\'3) For each K cluster, calculate the cluster mean\')\n\t\tst.write(\'4) Proceed through the list of observations and assign an observation to the cluster whose mean is nearest.\')\n\t\tst.write(\'In our tool we have made two types of clusters for each position. For example, In Goalkeeping clustering we took GK saving and GK passing datasets and performed K-means clustering independent of each other. This helps us to perform a deeper analysis on the Goalkeepers ability to prevent goals as well as thier passing style. By using these 2 clusters we can find a more accurate replacement for a goalkeeper. Below you can see the clusters for different positions based on one of thier aspects:\')\n\t\t\n\t\tst.subheader("Clusters")\n\t\tpos= st.selectbox("Select a Position",pd.unique(data[\'pos\']))\n\t\t\n\t\tif pos=="GK":\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_gk_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Cluster",template="ggplot2", title="Goal Keeper Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'CB\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_cb_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Centre Back Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'RB\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_rb_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Right Back Clusters",hover_data=reduced,hover_name=\'Name\')\n\t\telif pos==\'LB\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_lb_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Left Back Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'DM\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_cdm_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Defensive Midfield Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'CM\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_cm_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Central Midfielders Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'AM\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_am_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Attacking Midfielders Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'RW\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_rw_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Right Wingers Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'LW\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_lw_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Left Wingers Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\telif pos==\'CF\':\n\t\t\treduced=pd.read_excel("https://github.com/TazeemKhan9/Football-Player-Replacement/blob/main/Data/PCA/pca_cf_basic.xlsx?raw=true")\n\t\t\tfig = px.scatter(reduced,x="PC1", y="PC2",color="Basic_Cluster",template="ggplot2", title="Centre Forward Clusters",hover_data=reduced,hover_name=\'Name\',color_continuous_scale=\'Redor\')\n\t\tst.plotly_chart(fig)\n\n\t\tst.subheader(\'Analysis of Clusters\')\n\t\tst.write(\'\')\n\t\tpos= st.selectbox("Select a Position",[\'Goalkeeper\',\'Centre Back\',\'Left Back\',\'Right Back\',\'Defensive Midfielder\',\'Central Midfielder\',\'Attacking Midfielder\',\'Left Winger\',\'Right Winger\',\'Centre Forward\'])\n\t\t\n\t\t\t\n\t\tst.plotly_chart(fig1)\n\t\n\telif choice== \'Tool\':\n\t\tst.header("Player Replacement Tool")\n\n\t\tdata=load_data(url9,3000)\n\n\t\n\t\tdata.dropna(axis=0,inplace=True)\n\t\tleague_list=pd.unique(data[\'league\'])\n\t\tleague_select=st.selectbox(\'Select league\',options=league_list)\n\t\tl=str(league_select)\n\t\tmask0=(data[\'league\']==l)\n\t\tdata=data[mask0]\n \n\t\n\t\n\t\n\t\tteam_list=pd.unique(data[\'squad\'])\n\t\tteam_select=st.selectbox(\'Select team\',options=team_list)\n\t\tr=str(team_select)\n \n\t\n\t\n\t\tpos_list=pd.unique(data[\'pos\'])\n\t\tuser_input= st.selectbox(\'Select Position\',options=list(pos_list))\n\t\tf=list(data[\'value_num\'].astype(\'int32\'))\n\t\tf.sort()\n\t\tmask3=(data[\'squad\']==r)\n\t\t\n\n\t\t\n\t\tmask1=(data[\'pos\']==user_input)\n\t\tdata=data[mask1]\n\t\tdata=data[mask3]\n\t\tplayer_list=list(data[\'player\'])\n\t\tplayer_select=st.selectbox(\'Select Player\',options=player_list)\n\t\tx = st.select_slider(label=\'Player value\',options=f)\n\t\tnum=int(x)\n\t\tmask2=(data[\'value_num\']<=num)\n\t\tdata=data[mask2]\n\t\tmask4=(data[\'player\']==str(player_select))\n\t\t\n\t\tdata=data[mask4]\n\t\t\n\t\tval=num\n\t\tAge=st.number_input(\'Enter age\')\n\t\tif user_input==\'GK\':\n\t\t\tgk_search=load_data(url1,1000)\n\t\t\tgk_advance=load_data(url2,1000)\n\t\t\tsearch_df=gk_replacement_basic(gk_search,player_select,Age,val)\n\t\t\tadvance_data=load_data(url2,1000)\n\t\t\tdf2=gk_replacement_advance(gk_advance,player_select,Age,val)\n\t\t\toutput_df = pd.merge(search_df,df2, how=\'inner\', on=\'player\')\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_df,width=2000,height=2000)\n\t\t\t\n\t\telif user_input==\'RB\':\n\t\t\trb_basic=load_data(url3,1000)\n\t\t\trb_advanced=load_data(url4,1000)\n\t\t\tresult_basic=Replacement_rb(rb_basic,player_select,Age,val)\n\t\t\tresult_rb_passing=Replacement_rb_passing(rb_advanced,player_select,Age,val)\n\t\t\t\n\t\t\tresult_rb_passing.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_basic[\'basic_cluster\']=result_basic[\'basic_cluster\'].replace(to_replace =[0,1,2],value =["Defensive","Mix","Attacking"])\n\t\t\tresult_rb_passing[\'advance_cluster\']=result_rb_passing[\'advance_cluster\'].replace(to_replace =[0,1,2],value =["Conservative Passing","Mix Passing","Attacking Passing"])\n\t\t\toutput_rb = pd.merge(result_basic,result_rb_passing, how=\'inner\', on=\'player\')\n\t\t\toutput_rb=output_rb[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_rb,width=2000,height=2000)\n\n\t\telif user_input==\'LB\':\n\t\t\tlb_basic=load_data(url5,200)\n\t\t\tlb_advanced=load_data(url6,200)\n\t\t\tresult_basic= Replacement_lb(lb_basic,player_select,Age,val)\n\t\t\tresult_lb_passing=Replacement_lb_passing(lb_advanced,player_select,Age,val)\n\t\t\tresult_lb_passing.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_lb_passing[\'advance_cluster\']=result_lb_passing[\'advance_cluster\'].replace(to_replace =[1,2,0],value =["Ball Playing","Defensive","Mix"])\n\t\t\tresult_basic[\'basic_cluster\']=result_basic[\'basic_cluster\'].replace(to_replace =[2,1,0],value =["Conservative Passing","Mix Passing","Attacking Passing"])\n\t\t\toutput_lb = pd.merge(result_basic,result_lb_passing, how=\'inner\', on=\'player\')\n\t\t\toutput_lb=output_lb[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_lb,width=2000,height=2000)\n\n\n\t\telif user_input==\'CB\':\n\t\t\tcb_basic=load_data(url8,1000)\n\t\t\tcb_advanced=load_data(url7,1000)\n\t\t\tresult_basic=Replacement_cb(cb_basic,player_select,Age,val)\n\t\t\tresult_cb_passing=Replacement_cb_passing(cb_advanced,player_select,Age,val)\n\t\t\tresult_cb_passing.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_cb_passing[\'advance_cluster\']=result_cb_passing[\'advance_cluster\'].replace(to_replace =[0,1,2],value =["Average Passing",\'Best Passing\',\'Worst Passing\'])\n\t\t\tresult_basic[\'basic_cluster\']=result_basic[\'basic_cluster\'].replace(to_replace =[1,0,2],value =["Ball Playing","Sweeper","Ball Winning"])\n\t\t\toutput_cb = pd.merge(result_basic,result_cb_passing, how=\'inner\', on=\'player\')\n\t\t\toutput_cb=output_cb[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_cb,width=2000,height=2000)\n\t\t\n\n\t\telif user_input==\'CM\':\n\t\t\tcm_basic=load_data(url10,1000)\n\t\t\tcm_advanced=load_data(url11,1000)\n\t\t\tresult_cm_passing=Replacement_cm_passing(cm_basic,player_select,Age,val)\n\t\t\tresult_attacking_cm=Replacement_cm_attacking(cm_advanced,player_select,Age,val)\n\t\t\tresult_attacking_cm.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_cm_passing[\'basic_cluster\']=result_cm_passing[\'basic_cluster\'].replace(to_replace =[0,1,2,3],value =["Best Pass Completers","Bad Passers","Best Creative Passes",\'Best Long Passers\'])\n\t\t\tresult_attacking_cm[\'advance_cluster\']=result_attacking_cm[\'advance_cluster\'].replace(to_replace =[0,1,2],value =["Least Attacking","Average Attacking","Best Attacking"])\n\t\t\toutput_cm = pd.merge(result_cm_passing,result_attacking_cm, how=\'inner\', on=\'player\')\n\t\t\toutput_cm=output_cm[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_cm,width=2000,height=2000)\n\t\t\n\t\telif user_input==\'DM\':\n\t\t\tcdm_basic=load_data(url12,1000)\n\t\t\tcdm_advanced=load_data(url13,1000)\n\t\t\tresult_cdm_basic=Replacement_cdm(cdm_basic,player_select,Age,val)\n\t\t\tresult_cdm_passing=Replacement_cdm_passing(cdm_advanced,player_select,Age,val)\n\t\t\tresult_cdm_passing.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_cdm_basic[\'basic_cluster\']=result_cdm_basic[\'basic_cluster\'].replace(to_replace =[0,1,2],value =["Passive Defending","Least Defensive","Aggresive Defending"])\n\t\t\tresult_cdm_passing[\'advance_cluster\']=result_cdm_passing[\'advance_cluster\'].replace(to_replace =[0,1,2],value =["Creative Passing ","Mix Passing","Safe Passing"])\n\t\t\toutput_cdm = pd.merge(result_cdm_basic,result_cdm_passing, how=\'inner\', on=\'player\')\n\t\t\toutput_cdm=output_cdm[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_cdm,width=2000,height=2000)\n\n\n\t\telif user_input==\'AM\':\n\t\t\tam_basic=load_data(url14,1000)\n\t\t\tam_advanced=load_data(url15,1000)\n\t\t\tresult_attacking_am=Replacement_am_attacking(am_basic,player_select,Age,val)\n\t\t\tresult_passing_am=Replacement_am_passing(am_advanced,player_select,Age,val)\n\t\t\t\n\t\t\tresult_passing_am.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_attacking_am[\'basic_cluster\']=result_attacking_am[\'basic_cluster\'].replace(to_replace =[0,1,2],value =["Best Attackers","Bad Attackers","Good Attackers"])\n\t\t\tresult_passing_am[\'advance_cluster\']=result_passing_am[\'advance_cluster\'].replace(to_replace =[0,1],value =["Good Passers","Average Passers"])\n\t\t\toutput_am = pd.merge(result_passing_am,result_attacking_am, how=\'inner\', on=\'player\')\n\t\t\toutput_am=output_am[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_am,width=5000,height=2000)\n\t\n\n\t\telif user_input==\'LW\':\n\t\t\tlw_basic=load_data(url16,1000)\n\t\t\tlw_advanced=load_data(url17,1000)\n\t\t\tresult_attacking_lw=Replacement_lw_attacking(lw_basic,player_select,Age,val)\n\t\t\tresult_passing_lw=Replacement_lw_passing(lw_advanced,player_select,Age,val)\n\t\t\t\n\t\t\tresult_passing_lw.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_attacking_lw[\'basic_cluster\']=result_attacking_lw[\'basic_cluster\'].replace(to_replace =[0,1,2,3],value =["Elite Attackers","Below Average Attackers","Good Attackers","Average Attackers"])\n\t\t\tresult_passing_lw[\'advance_cluster\']=result_passing_lw[\'advance_cluster\'].replace(to_replace =[0,1,2],value =["Best Attacking Passes","Best Pass Completers","Average Passers"])\n\t\t\toutput_lw = pd.merge(result_passing_lw,result_attacking_lw, how=\'inner\', on=\'player\')\n\t\t\toutput_lw=output_lw[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are:")\n\t\t\tst.dataframe(data=output_lw,width=2000,height=2000)\n\n\n\t\telif user_input==\'RW\':\n\t\t\trw_basic=load_data(url18,1000)\n\t\t\trw_advanced=load_data(url19,1000)\n\t\t\tresult_passing_rw=Replacement_rw_passing(rw_advanced,player_select,Age,val)\n\t\t\tresult_attacking_rw=Replacement_rw_attacking(rw_basic,player_select,Age,val)\n\t\t\n\t\t\t\n\t\t\tresult_passing_rw.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_attacking_rw[\'basic_cluster\']=result_attacking_rw[\'basic_cluster\'].replace(to_replace =[2,3,0,1],value =["Elite Attackers","Below Average Attackers","Good Attackers","Average Attackers"])\n\t\t\tresult_passing_rw[\'advance_cluster\']=result_passing_rw[\'advance_cluster\'].replace(to_replace =[0,1,2],value =["Best Overall Passers","Good Attacking Passers","Good Pass Completion"])\n\t\t\toutput_rw = pd.merge(result_passing_rw,result_attacking_rw, how=\'inner\', on=\'player\')\n\t\t\toutput_rw=output_rw[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are")\n\t\t\tst.dataframe(data=output_rw,width=2000,height=2000)\n\t\t\n\t\telif user_input==\'CF\':\n\t\t\tcf_basic=load_data(url20,1000)\n\t\t\tcf_advanced=load_data(url21,1000)\n\t\t\tresult_attacking_cf=Replacement_cf_attacking(cf_basic,player_select,Age,val)\n\t\t\tresult_passing_cf=Replacement_cf_passing(cf_advanced,player_select,Age,val)\n\t\t\tresult_passing_cf.drop([\'value\',\'value_num\',\'pos\',\'squad\',\'age\'],inplace=True,axis=1)\n\t\t\tresult_attacking_cf[\'basic_cluster\']=result_attacking_cf[\'basic_cluster\'].replace(to_replace =[2,3,1,0],value =["Elite Attackers","Below Average Attackers","Good Attackers","Average Attackers"])\n\t\t\tresult_passing_cf[\'advance_cluster\']=result_passing_cf[\'advance_cluster\'].replace(to_replace =[2,0,1],value =["Best Overall Passers","Best Pass Completion","Average Passers"])\n\t\t\toutput_cf = pd.merge(result_passing_cf,result_attacking_cf, how=\'inner\', on=\'player\')\n\t\t\toutput_cf=output_cf[[\'player\',\'nation\',\'pos\',\'value\',\'value_num\',\'squad\',\'age\',\'basic_cluster\',\'advance_cluster\']]\n\t\t\tst.subheader("The replacements are")\n\t\t\tst.dataframe(data=output_cf,width=2000,height=2000)\n\n\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t\n\t\n\n\n \n\n\n\t\n\n\n\t\t\n\n\t\t\n\t\t\n\n\t\t\n\t\t\n\n\t\n\n\t\n \n\n \n \n \n \n \n                \n\n \n \nif __name__ == \'__main__\':\n\tmain()')

